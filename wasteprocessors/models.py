from django.db import models
from django.contrib.auth.models import User

# First four models will be moved to a 'userprofiles' app

class UserType(models.Model):
    """A model for storing the type of user, such as construction business,
    home owner, salvage company, recycling company etc. This allows for
    certain features of our app to be targeted to specific kinds of users."""
    user_type = models.CharField(max_length=128)

    def __str__(self):
        return self.user_type

class Profile(models.Model):
    """A model for storing data related to specific users."""
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    user_type = models.ForeignKey(UserType)
    company = models.CharField(max_length=128)

    def __str__(self):
        return self.user.username

class ProjectType(models.Model):
    """A model for storing categories of construction projects such as
    new construction, commercial construction, residential construction,
    remodel, home owner project etc."""
    project_type = models.CharField(max_length=128)

    def __str__(self):
        return self.project_type

class Project(models.Model):
    """A model for storing a specific construction project, registered
    by a user along with its associated data."""
    profile = models.ForeignKey(Profile, related_name='projects')
    project = models.CharField(max_length=128)
    project_type = models.ForeignKey(ProjectType)
    address = models.CharField(max_length=128)

    def __str__(self):
        return self.project

# Models for the 'wasteprocessors' app

class MaterialType(models.Model):
    """A model for storing broad categories of building materials such as
    wood, brick, concrete, reusable building materials etc."""
    material_type = models.CharField(max_length=128)
    description = models.TextField(blank=True)
    special_considerations = models.TextField(blank=True)

    def __str__(self):
        return self.material_type

class Material(models.Model):
    """A model for storing specific types of building materials such
    as pressure treated lumber, cedar shingles, reusable kitchen cabinets
    etc."""
    material = models.CharField(max_length=128)
    material_type = models.ForeignKey(MaterialType)
    description = models.TextField(blank=True)
    special_considerations = models.TextField(blank=True)

    def __str__(self):
        return self.material

class WasteType(models.Model):
    """A model for storing various categories of construction waste such
    as salvage, scrap, surplus etc."""
    waste_type = models.CharField(max_length=128) # salvage, scrap, surplus etc.

    def __str__(self):
        return self.waste_type

class Waste(models.Model):
    """A specific waste item generated by a contractor or home owner that
    they wish to recycle, sell or donate for reuse."""
    project = models.ForeignKey(Project)
    waste_type = models.ForeignKey(WasteType)
    material_type = models.ForeignKey(MaterialType, null=True)

    def __str__(self):
        return self.material_type.material_type

class WasteProcessor(models.Model):
    """A model for storing data related to a specific construction waste
    processing business or service."""
    company = models.CharField(max_length=128)
    description = models.TextField(blank=True)
    website = models.URLField(blank=True)
    phone = models.CharField(max_length=15, blank=True)
    business_hours = models.TextField(blank=True)
    email = models.EmailField(blank=True)
    address = models.CharField(max_length=128, blank=True)
    materials_accepted = models.ManyToManyField(MaterialType, related_name='material_types')
    will_pick_up = models.BooleanField()
    will_purchase = models.BooleanField()
    accepts_donations = models.BooleanField()

    def __str__(self):
        return self.company


