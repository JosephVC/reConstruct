from django.db import models
from userprofiles.models import Project


class MaterialType(models.Model):
    """A model for storing broad categories of building materials such as
    wood, brick, concrete, reusable building materials etc."""
    material_type = models.CharField(max_length=128)
    material_slug = models.SlugField()
    description = models.TextField(blank=True)
    special_considerations = models.TextField(blank=True)

    def __str__(self):
        return self.material_type

class WasteType(models.Model):
    """A model for storing various categories of construction waste such
    as salvage, scrap, surplus etc."""
    waste_type = models.CharField(max_length=128) # salvage, scrap, surplus etc.

    def __str__(self):
        return self.waste_type

class Waste(models.Model):
    """A specific waste item generated by a contractor or home owner that
    they wish to recycle, sell or donate for reuse."""
    project = models.ForeignKey(Project)
    waste_type = models.ForeignKey(WasteType)
    material_type = models.ForeignKey(MaterialType, null=True)

    def __str__(self):
        return self.material_type.material_type

class WasteProcessor(models.Model):
    """A model for storing data related to a specific construction waste
    processing business or service."""
    company = models.CharField(max_length=128)
    description = models.TextField(blank=True)
    website = models.URLField(blank=True)
    phone = models.CharField(max_length=15, blank=True)
    business_hours = models.TextField(blank=True)
    email = models.EmailField(blank=True)
    address = models.CharField(max_length=128, blank=True)
    materials_accepted = models.ManyToManyField(MaterialType, related_name='material_types')
    will_pick_up = models.BooleanField()
    will_purchase = models.BooleanField()
    accepts_donations = models.BooleanField()
    paid_service = models.BooleanField(default=False)
    accepts_salvage = models.NullBooleanField()
    accepts_surplus = models.NullBooleanField()
    accepts_scrap = models.NullBooleanField()

    def __str__(self):
        return self.company


